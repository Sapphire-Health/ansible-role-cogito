# configure SQL Server per Epic specs
# How can we detect the numbering to use for regedit name? This only works if it runs them all in one go. Otherwise we might overwrite existing.
# it seems like whoever "had it last" sets sql_config_updated. there must be a better way to handle this?
# does lyas know how to handle pscredential objects? I don't. Line 37
---
- name: Add tags to all tasks
  tags:
    - sql
    - caboodle
    - clarity
  block:
    - name: Add Trace Flags to SQL Server Startup Parameters
      ansible.windows.win_regedit:
        path: "HKLM:\\SOFTWARE\\Microsoft\\Microsoft SQL Server\\MSSQL16.MSSQLSERVER\\MSSQLServer\\Parameters"  
        name: "{{ 'SQLArg' ~ (item_index + 3) }}"
        data: "-T{{ item }}"
        type: "string"
        state: present
      loop: "{{ Traceflags }}"
      loop_control:
        index_var: item_index
      register: trace_flag_added

    - name: Restart SQL Server if trace flag was added
      when: trace_flag_added.changed
      ansible.windows.win_service:
        name: MSSQLSERVER
        state: restarted

    - name: Set MaxDOP based on cores on the server
      ansible.windows.win_dsc:
        InstanceName: MSSQLSERVER
        resource_name: SqlMaxDop
        Ensure: present
        MaxDop: "{{ [ansible_facts.processor_vcpus | int, 8] | min }}"
#
#    replaced by task below it
#    for agent account ServiceType: SQLServerAgent
#    - name: Set engine account to service user
#      ansible.windows.win_dsc:
#        InstanceName: MSSQLSERVER
#        resource_name: SqlServiceAccount
#        ServiceType: DatabaseEngine
#        ServiceAccount: PSCredential <<<------- how do we pass this in?

    - name: Set engine account to service user
      ansible.windows.win_service:
        name: MSSQLSERVER
        username: "{{ user_sqlengine }}"
        password: "{{ lookup('ansible.builtin.env', 'LOCAL_ADMIN_PASSWORD') }}"

    - name: Set agent account to service user
      ansible.windows.win_service:
        name: SQL Server Agent (MSSQLSERVER)
        username: "{{ user_sqlagent }}"
        password: "{{ lookup('ansible.builtin.env', 'LOCAL_ADMIN_PASSWORD') }}"

    - name: Set index fill factor and max worker threads with T-SQL
      ansible.windows.win_dsc:
        resource_name: SqlScriptQuery
        Id: "ConfigureIndexFillandMaxWorkerThreads"
        InstanceName: "{{ dsc_instancename }}"
        Encrypt: Optional
        SetQuery: |
          EXEC sys.sp_configure 'show advanced options', 1;
          RECONFIGURE;
          EXEC sys.sp_configure 'fill factor (%)', 85;
          RECONFIGURE;
          EXEC sp_configure 'max worker threads', 0;
          RECONFIGURE;
        GetQuery: |
          SELECT 
              name,
              value_in_use AS [Current Value],
              value AS [Configured Value]
          FROM sys.configurations
          WHERE name IN ('fill factor (%)', 'max worker threads');
        TestQuery: |
          SELECT NULL;
      register: sql_config_updated
    
# https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html#breaking-out-of-a-loop - see break_when
# consider set_fact

    - name: Check for pattern match - clarity. Set maxmempercent if matching.
      set_fact:
        maxmempercent: "0.83"
      loop: "{{ sql_dbs }}"
      when: item.name is search("clarity", ignorecase=True)

    - name: Check for pattern match - caboodle. Set maxmempercent if matching.
      set_fact:
        maxmempercent: "0.87"
      loop: "{{ sql_dbs }}"
      when: item.name is search("caboodle", ignorecase=True)

    - name: Set max memory for Clarity or caboodle with T-SQL
      when: maxmempercent is defined
      ansible.windows.win_dsc:
        resource_name: SqlScriptQuery
        Id: "ConfigureIndexFillandMaxWorkerThreads"
        InstanceName: "{{ dsc_instancename }}"
        Variable: "MAXMEMPERCENT={{ maxmempercent }}"
        Encrypt: Optional
        SetQuery: |
          DECLARE @memory INT;
          EXEC sp_configure 'show advanced options', 1;
          RECONFIGURE;
          SELECT @memory = $(MAXMEMPERCENT)*physical_memory_kb/1024 from sys.dm_os_sys_info
          EXEC sys.sp_configure N'max server memory (MB)', @memory
          RECONFIGURE WITH OVERRIDE
        GetQuery: |
          SELECT name, value, value_in_use
          FROM sys.configurations
          WHERE name = 'max server memory (MB)';
        TestQuery: |
          SELECT NULL;
      register: sql_config_updated

    - name: Restart SQL Server if fill factor, max worker threads, or max memory was changed
      when: sql_config_updated.changed 
      ansible.windows.win_service:
        name: MSSQLSERVER
        state: restarted

# caboodle install: On the Feature Selection page, select Database Engine Services, Full-Text and Semantic Extractions for Search, and Integration Services.
